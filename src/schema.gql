# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input LoginInput {
  email: String!
  password: String!
}

type LoginResponse {
  accessToken: String!
}

input MovieInput {
  characters: [String]
  created: String!
  director: String!
  edited: String!
  episode_id: Float!
  opening_crawl: String!
  planets: [String]
  producer: String!
  release_date: String!
  species: [String]
  starships: [String]
  title: String!
  url: String!
  vehicles: [String]
}

type MovieOutput {
  _id: ID!
  characters: [String!]!
  created: String!
  director: String!
  edited: String!
  episode_id: Float!
  opening_crawl: String!
  planets: [String!]!
  producer: String!
  release_date: String!
  species: [String!]!
  starships: [String!]!
  title: String!
  url: String!
  vehicles: [String!]!
}

input MovieUpdateInput {
  characters: [String]
  created: String
  director: String
  edited: String
  episode_id: Float
  opening_crawl: String
  planets: [String]
  producer: String
  release_date: String
  species: [String]
  starships: [String]
  title: String
  url: String
  vehicles: [String]
}

type Mutation {
  createMovie(movie: MovieInput!): MovieOutput
  login(input: LoginInput!): LoginResponse!
  register(registerData: RegisterDto!): UserDto!
  updateMovie(id: String!, movie: MovieUpdateInput!): MovieOutput
  updateUser(id: String!, updateData: UpdateUserInput!): UserDto!
}

type Query {
  getMovieByTitle(title: String!): MovieOutput
  getMovies: [MovieOutput!]
  getUser(id: String!): UserDto!
}

input RegisterDto {
  email: String!
  name: String!
  password: String!
  role: String!
}

input UpdateUserInput {
  email: String
  name: String
  password: String
}

type UserDto {
  email: String!
  id: String!
  role: String!
}